package com.admin.codegenreallynew.util;

import java.util.List;
import javax.annotation.processing.Generated;
import lombok.Getter;
import org.springframework.data.domain.Page;

/**
 * Single page of a pageable request. Allows conversions between pages of distinct types.
 *
 * @param <T> Type of elements included in the page.
 */
@Generated(value = "com.exocoding.codegen", comments = "Generated by ExoCoding")
@Getter
public class PagedList<T> {

  /** Number of pages. */
  private final int totalPages;

  /** Current page index. */
  private final int currentPage;

  /** Number of all available items. */
  private final long totalItems;

  /** List of page elements. */
  private final List<T> items;

  /** Private constructor. */
  private PagedList(int currentPage, int totalPages, long totalItems, List<T> items) {
    this.currentPage = currentPage;
    this.totalPages = totalPages;
    this.totalItems = totalItems;
    this.items = items;
  }

  public static <T> PagedList<T> of(
      int currentPage, int totalPages, long totalItems, List<T> items) {
    return new PagedList<>(currentPage, totalPages, totalItems, items);
  }

  public static <T> PagedList<T> of(Page<?> originalPage, List<T> items) {
    return new PagedList<>(
        originalPage.getNumber(),
        originalPage.getTotalPages(),
        originalPage.getTotalElements(),
        items);
  }

  public static <T> PagedList<T> of(PagedList<?> originalPage, List<T> items) {
    return new PagedList<>(
        originalPage.getCurrentPage(),
        originalPage.getTotalPages(),
        originalPage.getTotalItems(),
        items);
  }
}
