package com.admin.codegenreallynew.services.somefolderx3x;

import com.admin.codegenreallynew.dto.somefolderx2.Tbl1ObjXdto;
import com.admin.codegenreallynew.exceptions.NotFoundException;
import com.admin.codegenreallynew.mapper.Tbl1ObjXReadMapper;
import com.admin.codegenreallynew.mapper.Tbl1ObjXWriteMapper;
import com.admin.codegenreallynew.model.somefolder.Tbl1;
import com.admin.codegenreallynew.repos.Tbl1Repository;
import javax.annotation.processing.Generated;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Generated(value = "com.exocoding.codegen", comments = "Generated by ExoCoding")
@Service
@RequiredArgsConstructor(onConstructor_ = @Autowired)
public class Table1Servicex {

  private final Tbl1Repository tbl1Repository;

  private final Tbl1ObjXWriteMapper tbl1ObjXWriteMapper;

  private final Tbl1ObjXReadMapper tbl1ObjXReadMapper;

  /** createTable1Obj function */
  public Tbl1ObjXdto createTable1Obj(Tbl1ObjXdto table1Obj) {
    // DECLARE_VARIABLE
    Tbl1ObjXdto table1ObjOut = null;
    // CREATE_ENTITY
    Tbl1 tbl1Entity = tbl1ObjXWriteMapper.dtoToEntity(table1Obj);
    Tbl1 tbl1Saved = tbl1Repository.save(tbl1Entity);
    table1ObjOut = tbl1ObjXWriteMapper.entityToDto(tbl1Saved);
    // RETURN_TYPE
    return table1ObjOut;
  }

  /** deleteTable1Obj function */
  public void deleteTable1Obj(Long idTable1) {
    // DELETE_ENTITY
    Tbl1 tbl1Entity = tbl1Repository.findById(idTable1).orElseThrow(() -> new NotFoundException());
    tbl1Repository.delete(tbl1Entity);
  }

  /** readTable1Obj function */
  public Tbl1ObjXdto readTable1Obj(Long idTable1) {
    // DECLARE_VARIABLE
    Tbl1ObjXdto table1ObjOut = null;
    // READ_ENTITY
    Tbl1 tbl1Entity = tbl1Repository.findById(idTable1).orElseThrow(() -> new NotFoundException());
    table1ObjOut = tbl1ObjXReadMapper.entityToDto(tbl1Entity);
    // RETURN_TYPE
    return table1ObjOut;
  }

  /** updateTable1Obj function */
  public Tbl1ObjXdto updateTable1Obj(Tbl1ObjXdto table1Obj) {
    // DECLARE_VARIABLE
    Tbl1ObjXdto table1ObjOut = null;
    // UPDATE_ENTITY
    Tbl1 tbl1Entity =
        tbl1Repository.findById(table1Obj.getIdTable1()).orElseThrow(() -> new NotFoundException());
    tbl1ObjXWriteMapper.updateFromDto(tbl1Entity, table1Obj);
    Tbl1 tbl1Saved = tbl1Repository.save(tbl1Entity);
    table1ObjOut = tbl1ObjXWriteMapper.entityToDto(tbl1Saved);
    // RETURN_TYPE
    return table1ObjOut;
  }
}
