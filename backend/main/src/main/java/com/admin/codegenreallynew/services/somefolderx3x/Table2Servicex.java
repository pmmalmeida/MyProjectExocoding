package com.admin.codegenreallynew.services.somefolderx3x;

import com.admin.codegenreallynew.dto.somefolderx2.Tbl2ObjXdto;
import com.admin.codegenreallynew.exceptions.NotFoundException;
import com.admin.codegenreallynew.mapper.Tbl2ObjXReadMapper;
import com.admin.codegenreallynew.mapper.Tbl2ObjXWriteMapper;
import com.admin.codegenreallynew.model.somefolder.Tbl2Xx;
import com.admin.codegenreallynew.repos.Tbl2XxRepository;
import javax.annotation.processing.Generated;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Generated(value = "com.exocoding.codegen", comments = "Generated by ExoCoding")
@Service
@RequiredArgsConstructor(onConstructor_ = @Autowired)
public class Table2Servicex {

  private final Tbl2XxRepository tbl2XxRepository;

  private final Tbl2ObjXWriteMapper tbl2ObjXWriteMapper;

  private final Tbl2ObjXReadMapper tbl2ObjXReadMapper;

  /** createTable2Obj function */
  public Tbl2ObjXdto createTab2ObjX(Tbl2ObjXdto table2Obj) {
    // DECLARE_VARIABLE
    Tbl2ObjXdto table2ObjOut = null;
    // CREATE_ENTITY
    Tbl2Xx tbl2XxEntity = tbl2ObjXWriteMapper.dtoToEntity(table2Obj);
    Tbl2Xx tbl2XxSaved = tbl2XxRepository.save(tbl2XxEntity);
    table2ObjOut = tbl2ObjXWriteMapper.entityToDto(tbl2XxSaved);
    // RETURN_TYPE
    return table2ObjOut;
  }

  /** deleteTable2Obj function */
  public void deleteTable2Obj(Long idTable2) {
    // DELETE_ENTITY
    Tbl2Xx tbl2XxEntity =
        tbl2XxRepository.findById(idTable2).orElseThrow(() -> new NotFoundException());
    tbl2XxRepository.delete(tbl2XxEntity);
  }

  /** readTable2Obj function */
  public Tbl2ObjXdto readTble2ObjX(Long idTable2) {
    // DECLARE_VARIABLE
    Tbl2ObjXdto table2ObjOut = null;
    // READ_ENTITY
    Tbl2Xx tbl2XxEntity =
        tbl2XxRepository.findById(idTable2).orElseThrow(() -> new NotFoundException());
    table2ObjOut = tbl2ObjXReadMapper.entityToDto(tbl2XxEntity);
    // RETURN_TYPE
    return table2ObjOut;
  }

  /** updateTable2Obj function */
  public Tbl2ObjXdto updateTable2Obj(Tbl2ObjXdto table2Obj) {
    // DECLARE_VARIABLE
    Tbl2ObjXdto table2ObjOut = null;
    // UPDATE_ENTITY
    Tbl2Xx tbl2XxEntity =
        tbl2XxRepository
            .findById(table2Obj.getIdTable2())
            .orElseThrow(() -> new NotFoundException());
    tbl2ObjXWriteMapper.updateFromDto(tbl2XxEntity, table2Obj);
    Tbl2Xx tbl2XxSaved = tbl2XxRepository.save(tbl2XxEntity);
    table2ObjOut = tbl2ObjXWriteMapper.entityToDto(tbl2XxSaved);
    // RETURN_TYPE
    return table2ObjOut;
  }
}
